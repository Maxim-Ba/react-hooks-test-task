{"version":3,"sources":["components/Item/Item.js","components/rightComponent/RightComponent.js","components/button/Button.js","components/time/Time.js","reducer/Reducer.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Item","item","style","elementIndexSelected","backgroundColor","className","name","RightComponent","props","useState","valueInp","setValueInp","inputIsEmpty","setInputIsEmpty","select","e","side","dispatch","type","currentTarget","getAttribute","index","parseInt","dataList","value","overflowY","height","TransitionGroup","filter","map","CSSTransition","key","timeout","in","classNames","onClick","onChange","target","role","top","position","Button","direction","selectedR","selectedL","Time","useContext","exportTime","time","setTime","useEffect","setTimeout","date","Date","getHours","getMinutes","getSeconds","Reducer","state","action","right","left","Footer","isOpened","setIsOpened","appear","unmountOnExit","React","createContext","now","App","useReducer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.add5a5bf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport const Item = (item) =>{\r\n  const style = item.elementIndexSelected ?{backgroundColor : 'red'}:{backgroundColor : 'white'}\r\n\r\n  return(\r\n    <p style={style} className='item'>\r\n      {item.name}\r\n    </p>\r\n  )\r\n}","import React, { useState, } from 'react';\r\nimport { Item } from '../Item/Item';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nexport const RightComponent = (props) => {\r\n  const [valueInp, setValueInp] = useState('');\r\n  const [inputIsEmpty, setInputIsEmpty] = useState(false);\r\n  const select = (e) => {\r\n    if (props.side === 'right') {\r\n\r\n      props.dispatch({ type: 'ADD_TO_SELECTEDR', item: { name: e.currentTarget.getAttribute('name'), select: false } });\r\n      return props.dispatch({ type: 'SELECT_R', index: parseInt(e.currentTarget.getAttribute('index')) });\r\n    }\r\n    props.dispatch({ type: 'ADD_TO_SELECTEDL', item: { name: e.currentTarget.getAttribute('name'), select: false } });\r\n    props.dispatch({ type: 'SELECT_L', index: parseInt(e.currentTarget.getAttribute('index')) });\r\n  };\r\n\r\n  const dataList = props.value;\r\n  const handleClick = () => {\r\n    if (!valueInp) { return setInputIsEmpty(true); }\r\n    setInputIsEmpty(false);\r\n    props.side === 'right'\r\n      ? props.dispatch({ type: 'ADD_TO_RIGHT', item: { name: valueInp, select: false } })\r\n      : props.dispatch({ type: 'ADD_TO_LEFT', item: { name: valueInp, select: false } });\r\n    setValueInp('');\r\n  };\r\n  const handleChange = (e) => {\r\n    setValueInp(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=' WnH'>\r\n      <div className='list-group' style={{ overflowY: \"scroll\", height: '300px' }}>\r\n        <TransitionGroup >\r\n          {dataList.filter(item => item).map((item, index) =>\r\n            <CSSTransition\r\n              key={index}\r\n              timeout={500}\r\n              in={true}\r\n              classNames=\"list-group-item-transition\"\r\n            >\r\n              <div\r\n                \r\n                index={index}\r\n                className='list-group-item list-group-item_m-0_p-0'\r\n                onClick={select}\r\n                name={item.name}\r\n              >\r\n                <Item name={item.name} elementIndexSelected={item.select} />\r\n              </div>\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n      </div >\r\n      <div className=\"input-group mb-3\">\r\n        <input onChange={handleChange} type=\"text\" className=\"form-control\" value={valueInp} />\r\n        <button className=\"btn btn-info\" onClick={handleClick}>Add</button>\r\n        {inputIsEmpty\r\n          ? <div className=\"alert alert-danger\" role=\"alert\" style={{\r\n            top: '105%',\r\n            position: 'absolute'\r\n          }}>\r\n            This field is reqired!\r\n        </div>\r\n          : null\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react'\r\n\r\n\r\nexport const Button = (props) =>{\r\n  const handleClick = () =>{\r\n    if(props.direction === '>'){\r\n      if (props.selectedR) {\r\n        props.dispatch({type:'ADD_TO_LEFT', item: {name: props.selectedR.name, select: false }})\r\n      }\r\n      props.dispatch({ type: 'ADD_TO_SELECTEDR', item: null })\r\n      return props.dispatch({type: 'DELETE_IN_RIGHT'})\r\n      \r\n    }\r\n    if (props.selectedL) {\r\n      props.dispatch({type:'ADD_TO_RIGHT', item: {name:props.selectedL.name, select: false}})     \r\n    }\r\n    props.dispatch({ type: 'ADD_TO_SELECTEDL', item: null })\r\n    props.dispatch({type: 'DELETE_IN_LEFT'})\r\n    \r\n    \r\n  }\r\n  return(\r\n    <button className='btn btn-primary button' onClick={handleClick}>\r\n      {props.direction} button {props.direction}\r\n    </button>\r\n  )\r\n}","import React, { useEffect, useState, useContext } from 'react'\r\nimport { exportTime } from '../../App'\r\n\r\nexport const Time = () => {\r\n  const value = useContext(exportTime)\r\n  const [time, setTime] = useState(value)\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTime(time + 1000)\r\n    }, 1000)\r\n  }, [time])\r\n  let date = new Date(time)\r\n  return (\r\n    <div>\r\n      <p>TIMER</p>\r\n      <p>NOW IS: {`${date.getHours()}-${date.getMinutes()}-${date.getSeconds()}`}</p>\r\n    </div>\r\n  )\r\n}","\r\nconst ADD_TO_RIGHT = 'ADD_TO_RIGHT';\r\nconst ADD_TO_LEFT = 'ADD_TO_LEFT';\r\nconst DELETE_IN_RIGHT = 'DELETE_IN_RIGHT';\r\nconst DELETE_IN_LEFT = 'DELETE_IN_LEFT';\r\nconst SELECT_R = 'SELECT_R';\r\nconst SELECT_L = 'SELECT_L';\r\nconst ADD_TO_SELECTEDR = 'ADD_TO_SELECTEDR'\r\nconst ADD_TO_SELECTEDL = 'ADD_TO_SELECTEDL'\r\n\r\nconst Reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_RIGHT:\r\n      return {\r\n        ...state, right: [...state.right, action.item]\r\n      }\r\n    case ADD_TO_LEFT:\r\n      return {\r\n        ...state, left: [...state.left, action.item]\r\n      }\r\n    case DELETE_IN_RIGHT:\r\n      return {\r\n        ...state,\r\n        right: [...state.right].filter((item) => {\r\n          return (!item.select)\r\n        })\r\n        \r\n      }\r\n    case DELETE_IN_LEFT:\r\n      return {\r\n        ...state,\r\n        left: [...state.left].filter((item) => {\r\n          return (!item.select)\r\n        })\r\n      }\r\n    case SELECT_R:\r\n      return {\r\n        ...state,\r\n        right: [...state.right].map((item, index) => {\r\n          if (index === action.index) {\r\n            return { ...item, select: true }\r\n          }\r\n          return { ...item, select: false }\r\n        })\r\n      }\r\n    case SELECT_L:\r\n      return {\r\n        ...state,\r\n        left: [...state.left].map((item, index) => {\r\n          if (index === action.index) {\r\n            return { ...item, select: true }\r\n          }\r\n          return { ...item, select: false }\r\n        })\r\n      }\r\n    case ADD_TO_SELECTEDR:\r\n      return {\r\n        ...state, \r\n        selectedR: action.item\r\n      }\r\n    case ADD_TO_SELECTEDL:\r\n      return {\r\n        ...state,\r\n          selectedL: action.item\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport { Reducer }","import React, { useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nexport const Footer = () => {\r\n  const [isOpened, setIsOpened] = useState(false);\r\n\r\n  const open = (e) => {\r\n    setIsOpened(true);\r\n  };\r\n  const close = (e) => {\r\n    setIsOpened(false);\r\n  };\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      classNames={'footer-transition'}\r\n      timeout={3000}\r\n    >\r\n      <footer className='footer container-fluid'>\r\n        <section className='about-project' onClick={!isOpened ? open : close}>\r\n          <div className={`about-project__link ${isOpened ? 'about-project_open' : null}`}>\r\n            <p>About project </p>{isOpened\r\n              ? <p className='about-project__link_close'>✖</p>\r\n              : null}\r\n          </div>\r\n        </section>\r\n        <CSSTransition\r\n          in={isOpened}\r\n          unmountOnExit\r\n          classNames={'project-description-transition'}\r\n          timeout={200}\r\n        >\r\n          <section className='project-description'>\r\n            <div>\r\n              <p>In this project used technologies:</p>\r\n              <ul className='list'>\r\n                <li>React (Hooks, Context, create-react-app)</li>\r\n                <li>Bootstrap</li>\r\n                <li>ReactTransitionGroup</li>\r\n                <li>Git</li>\r\n              </ul>\r\n            </div>\r\n          </section>\r\n        </CSSTransition>\r\n      </footer>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\n\r\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport { RightComponent } from './components/rightComponent/RightComponent';\nimport { Button } from './components/button/Button';\nimport { Time } from './components/time/Time';\nimport { Reducer } from './reducer/Reducer';\nimport { Footer } from './components/Footer/Footer';\nimport {CSSTransition} from 'react-transition-group';\n\nconst exportTime = React.createContext(Date.now());\nfunction App() {\n  const initialState = {\n    right: [],\n    left: [],\n    selectedR: null,\n    selectedL: null\n  };\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  return (\n    <CSSTransition  \n      in={true}\n      appear={true}\n      timeout={800}\n      classNames=\"first-transition\"\n      \n    >\n    <div className=\"App \">\n      <header className=\"App-header\">\n        <h1>Test task</h1>\n      </header>\n      <section className='App__wraper flex-column  flex-sm-row'>\n        <RightComponent dispatch={dispatch} value={state.right} side='right' />\n        <CSSTransition\n          appear={true}\n          in={true}\n          timeout={1000}\n          classNames=\"item-button-transition\"\n        >\n        <div className='btn-group-vertical'>\n          <Button direction='>' dispatch={dispatch} selectedR={state.selectedR} />\n          <Button direction='<' dispatch={dispatch} selectedL={state.selectedL} />\n        </div>\n        </CSSTransition>\n        <RightComponent dispatch={dispatch} value={state.left} side='left' />\n      </section>\n      <Time />\n      <Footer />\n    </div>\n    </CSSTransition  >\n  );\n}\n\nexport default App;\nexport { exportTime };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}